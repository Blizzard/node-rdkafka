# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := librdkafka
### Rules for action "configure":
quiet_cmd_deps_librdkafka_gyp_librdkafka_target_configure = ACTION deps_librdkafka_gyp_librdkafka_target_configure $@
cmd_deps_librdkafka_gyp_librdkafka_target_configure = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/deps; mkdir -p librdkafka; node ../util/configure

deps/librdkafka/config.h: obj := $(abs_obj)
deps/librdkafka/config.h: builddir := $(abs_builddir)
deps/librdkafka/config.h: TOOLSET := $(TOOLSET)
deps/librdkafka/config.h:  FORCE_DO_CMD
	$(call do_cmd,deps_librdkafka_gyp_librdkafka_target_configure)

all_deps += deps/librdkafka/config.h
action_deps_librdkafka_gyp_librdkafka_target_configure_outputs := deps/librdkafka/config.h

### Rules for action "build_dependencies":
quiet_cmd_deps_librdkafka_gyp_librdkafka_target_build_dependencies = ACTION deps_librdkafka_gyp_librdkafka_target_build_dependencies $@
cmd_deps_librdkafka_gyp_librdkafka_target_build_dependencies = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/deps; mkdir -p deps/librdkafka/src deps/librdkafka/src-cpp; make -C librdkafka libs install

deps/deps/librdkafka/src-cpp/librdkafka++.so: obj := $(abs_obj)
deps/deps/librdkafka/src-cpp/librdkafka++.so: builddir := $(abs_builddir)
deps/deps/librdkafka/src-cpp/librdkafka++.so: TOOLSET := $(TOOLSET)
deps/deps/librdkafka/src-cpp/librdkafka++.so deps/deps/librdkafka/src-cpp/librdkafka++.so.1 deps/deps/librdkafka/src/librdkafka.so deps/deps/librdkafka/src/librdkafka.so.1 deps/deps/librdkafka/src-cpp/librdkafka++.a deps/deps/librdkafka/src/librdkafka.a: 11a9e3388a67e1ca5c31c1d8da49cb6d2714eb41.intermediate
	@:
.INTERMEDIATE: 11a9e3388a67e1ca5c31c1d8da49cb6d2714eb41.intermediate
11a9e3388a67e1ca5c31c1d8da49cb6d2714eb41.intermediate: $(srcdir)/deps/librdkafka/config.h FORCE_DO_CMD
	$(call do_cmd,touch)
	$(call do_cmd,deps_librdkafka_gyp_librdkafka_target_build_dependencies)

all_deps += deps/deps/librdkafka/src-cpp/librdkafka++.so deps/deps/librdkafka/src-cpp/librdkafka++.so.1 deps/deps/librdkafka/src/librdkafka.so deps/deps/librdkafka/src/librdkafka.so.1 deps/deps/librdkafka/src-cpp/librdkafka++.a deps/deps/librdkafka/src/librdkafka.a
action_deps_librdkafka_gyp_librdkafka_target_build_dependencies_outputs := deps/deps/librdkafka/src-cpp/librdkafka++.so deps/deps/librdkafka/src-cpp/librdkafka++.so.1 deps/deps/librdkafka/src/librdkafka.so deps/deps/librdkafka/src/librdkafka.so.1 deps/deps/librdkafka/src-cpp/librdkafka++.a deps/deps/librdkafka/src/librdkafka.a


### Rules for final target.
# Build our special outputs first.
$(obj).target/deps/librdkafka.stamp: | $(action_deps_librdkafka_gyp_librdkafka_target_configure_outputs) $(action_deps_librdkafka_gyp_librdkafka_target_build_dependencies_outputs)

# Preserve order dependency of special output on deps.
$(action_deps_librdkafka_gyp_librdkafka_target_configure_outputs) $(action_deps_librdkafka_gyp_librdkafka_target_build_dependencies_outputs): | 

$(obj).target/deps/librdkafka.stamp: TOOLSET := $(TOOLSET)
$(obj).target/deps/librdkafka.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/deps/librdkafka.stamp
# Add target alias
.PHONY: librdkafka
librdkafka: $(obj).target/deps/librdkafka.stamp

# Add target alias to "all" target.
.PHONY: all
all: librdkafka

